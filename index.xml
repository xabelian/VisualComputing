<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://xabelian.github.io/VisualComputing/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xabelian.github.io/VisualComputing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Coreccion-de-color-para-Daltonismo/Modificacion-de-imagenes-para-personas-con-dificultades-en-la-percepcion-de-Color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Coreccion-de-color-para-Daltonismo/Modificacion-de-imagenes-para-personas-con-dificultades-en-la-percepcion-de-Color/</guid><description>Modificación de imagenes para personas con dificultades en la percepcion de color # Introducción # El daltonismo es la incapacidad para ver algunos colores en la forma normal.
Este ocurre cuando hay un problema con los pigmentos en ciertas células nerviosas del ojo que perciben el color. Estas células se llaman conos y se encuentran en la capa de tejido sensible a la luz que recubre la parte posterior del ojo, llamada la retina.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Daltonismo-y-Shaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Daltonismo-y-Shaders/</guid><description>Uso de Shaders para el ajuste de colores como ayuda para personas con daltonismo # Como se trabajó en la primera entrega de este curso, pudimos identificar distintos tipos de incapacidades en las personas para percibir distintos tipos de colores en las imágenes. Desde la Acromatopsia (Incapacidad para percibir cualquier color) hasta la Tritanopía (Dificualtades para percibir el azul), por medio de modificaciones y ajustes en las imágenes mediante sofware, primero es posible simular la discapacidad para que una persona sana entienda como ve el mundo una persona con este padecimiento y segundo, es posible realizar ajustes sobre la gama de colores pasra que la persona daltonica pueda percibir un poco mejor las imágenes.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Procedural-Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Procedural-Texturing/</guid><description>Procedural Texturing # Procedural Texturing.frag // Author @patriciogv ( patriciogonzalezvivo.com ) - 2015 // Title: Diamond Tiles #ifdef GL_ES precision mediump float; #endif // Copyright (c) Patricio Gonzalez Vivo, 2015 - http://patriciogonzalezvivo.com/ // I am the sole copyright owner of this Work. // // You cannot host, display, distribute or share this Work in any form, // including physical and digital. You cannot use this Work in any // commercial or non-commercial product, website or project.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Rendering/Scene-Trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Rendering/Scene-Trees/</guid><description>Scene Trees # 3D Brush # Una de las aplicaciones mas interesantes sobre los entornos de dibujo 3D o 3D Brushes, es acerca de los distintos dispositivos que se pueden utilizar para manipular estos espacios de trabajo. La idea de utilizar dispositivos diferentes es mejorar la experiencia del usuario y permitirle utilizar dispositivos diferentes al teclado y el mosue.
En nuestro caso, estudiamos el uso de controles de consolas en un 3D Brush, puntualmente el control de un PlayStation 4.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Rendering/Software-Rendering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Rendering/Software-Rendering/</guid><description>Renderización # Rendering es el proceso de generar una imagen fotorrealista o no fotorrealista a partir de un modelo 2D o 3D por medio de un programa. La imagen resultante se conoce como el renderizado.
Se pueden definir varios modelos en un archivo de escena que contiene objetos en un lenguaje o estructura de datos estrictamente definidos.
El archivo de escena contiene información de geometría, punto de vista, textura, iluminación y sombreado que describe la escena virtual.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Texture-Sampling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Texture-Sampling/</guid><description>Texture Sampling # Se implementó el cálculo del promedio de RGB.
Texture Sampling.frag precision mediump float; // uniforms are defined and sent by the sketch // The grey_scale value is used to send the coloring brightness tool uniform int grey_scale; uniform sampler2D texture; // interpolated texcoord (same name and type as in vertex shader) varying vec2 texcoords2; // returns luma of given texel float luma(vec3 texel) { return 0.299 * texel.</description></item></channel></rss>