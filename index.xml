<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://xabelian.github.io/VisualComputing/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://xabelian.github.io/VisualComputing/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://xabelian.github.io/VisualComputing/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>(Hu)go Template Primer</title><link>https://xabelian.github.io/VisualComputing/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://xabelian.github.io/VisualComputing/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Deteccion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Deteccion/</guid><description>Testing # Existen diferentes formas para la detección del Daltonismo.
Tests de Ishihara # Este es el tipo más común de prueba de daltonismo. Un oftalmólogo (usualmente) le pedirá que mire una imagen formada por puntos de colores con un número o forma de diferente color en el medio. Si la forma se mezcla con el fondo y no puedes verla, es posible que el paciente tenga un tipo de daltonismo.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Image-Color-Analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Image-Color-Analysis/</guid><description>La computación visual en ayuda de personas con Daltonismo # Introduccion # El daltonismo es la incapacidad para ver algunos colores en la forma normal.
Este ocurre cuando hay un problema con los pigmentos en ciertas células nerviosas del ojo que perciben el color. Estas células se llaman conos y se encuentran en la capa de tejido sensible a la luz que recubre la parte posterior del ojo, llamada la retina.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Resultados/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Resultados/</guid><description>1. Resultados # Para la primera entrega se realizo una modificación de los valores de RGB de los pixeles que cumplan con una cierta condición.
Se uso Coblis con la siguiente imagen para simular la vision de un paciente con Deuteranopia (ausencia de la percepción del espectro del color verde).
A la izquierda la imagen original, a la derecha la imagen como la veria un paciente con Deuteranopia.
La modificación de los valores de RGB permite aumentar el contraste de la imagen y diferencias las colores.</description></item><item><title/><link>https://xabelian.github.io/VisualComputing/docs/Team-Members/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xabelian.github.io/VisualComputing/docs/Team-Members/</guid><description>Camilo Garcia # Sergio Rivera # Nicolas Contreras #</description></item></channel></rss>